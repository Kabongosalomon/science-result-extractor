section: title
THE VARIATIONAL FAIR AUTOENCODER
section: abstract
We investigate the problem of learning representations that are invariant to certain nuisance or sensitive factors of variation in the data while retaining as much of the remaining information as possible. Our model is based on a variational autoencoding architecture (Kingma & Welling, 2014; Rezende et al., 2014) with priors that encourage independence between sensitive and latent factors of variation. Any subsequent processing, such as classification, can then be performed on this purged latent representation. To remove any remaining dependencies we incorporate an additional penalty term based on the "Maximum Mean Discrepancy" (MMD) (Gretton et al., 2006) measure. We discuss how these architectures can be efficiently trained on data and show in experiments that this method is more effective than previous work in removing unwanted sources of variation while maintaining informative latent representations.
section: INTRODUCTION
In "Representation Learning" one tries to find representations of the data that are informative fora particular task while removing the factors of variation that are uninformative and are typically detrimental for the task under consideration. Uninformative dimensions are often called "noise" or "nuisance variables" while informative dimensions are usually called latent or hidden factors of variation. Many machine learning algorithms can be understood in this way: principal component analysis, nonlinear dimensional reduction and latent Dirichlet allocation are all models that extract informative factors (dimensions, causes, topics) of the data which can often be used to visualize the data. On the other hand, linear discriminant analysis and deep (convolutional) neural nets learn representations that are good for classification.
In this paper we consider the case where we wish to learn latent representations where (almost) all of the information about certain known factors of variation are purged from the representation while still retaining as much information about the data as possible. In other words, we want a latent representation z that is maximally informative about an observed random variable y (e.g., class label) while minimally informative about a sensitive or nuisance variable s. By treating s as a sensitive variable, i.e. sis correlated with our objective, we are dealing with "fair representations", a problem previously considered by. If we instead treat s as a nuisance variable we are dealing with "domain adaptation", in other words by removing the domain s from our representations we will obtain improved performance.
In this paper we introduce a novel model based on deep variational autoencoders (VAE)). These models can naturally encourage separation between latent variables z and sensitive variables s by using factorized priors p(s)p(z). However, some dependencies may still remain when mapping data-cases to their hidden representation using the variational posterior q(z|x, s), which we stamp out using a "Maximum Mean Discrepancy" () term that penalizes differences between all order moments of the marginal posterior distributions q(z|s = k) and q(z|s = k ) (for a discrete RV s). In experiments we show that this combined approach is highly successful in learning representations that are devoid of unwanted information while retaining as much information as possible from what remains. Factoring out undesired variations from the data can be easily formulated as a general probabilistic model which admits two distinct (independent) "sources"; an observed variable s, which denotes the variations that we want to remove, and a continuous latent variable z which models all the remaining information. This generative process can be formally defined as:
where p θ (x|z, s) is an appropriate probability distribution for the data we are modelling. With this formulation we explicitly encode a notion of 'invariance' in our model, since the latent representation is marginally independent of the factors of variation s. Therefore the problem of finding an invariant representation fora data point x and variation scan be cast as performing inference on this graphical model and obtaining the posterior distribution of z, p(z|x, s).
For our model we will employ a variational autoencoder architecture); namely we will parametrize the generative model (decoder) p θ (x|z, s) and the variational posterior (encoder) q φ (z|x, s) as (deep) neural networks which accept as inputs z, sand x, s respectively and produce the parameters of each distribution after a series of non-linear transformations. Both the model (θ) and variational (φ) parameters will be jointly optimized with the SGVB ) algorithm according to a lower bound on the log-likelihood. This parametrization will allow us to capture most of the salient information of x in our embedding z. Furthermore the distributed representation of a neural network would allow us to better resolve the dependencies between x and s thus yielding a better disentangling between the independent factors z and s. By choosing a Gaussian posterior q φ (z|x, s) and standard isotropic Gaussian prior p(z) = N (0, I) we can obtain the following lower bound:
with f θ (z n , s n ) being an appropriate probability distribution for the data we are modelling.
section: SEMI-SUPERVISED MODEL
Factoring out variations in an unsupervised way can however be harmful in cases where we want to use this invariant representation fora subsequent prediction task. In particular if we have a situation where the nuisance variable sand the actual label y are correlated, then training an unsupervised model could yield random or degenerate representations with respect toy. Therefore it is more appropriate to try to "inject" the information about the label during the feature extraction phase. This can be quite simply achieved by introducing a second "layer" of latent variables to our generative model where we try to correlate z with the prediction task. Assuming that the invariant features are now called z 1 we enrich the generative story by similarly providing two distinct (independent) sources for z 1 ; a discrete (in case of classification)variable y which denotes the label of the data point x and a continuous latent variable z 2 which encodes the variation on z 1 that is not explained by y (x dependent noise). The process now can be formally defined as:
x ∼ p θ (x|z 1 , s) Similarly to the unsupervised case we use a variational auto-encoder and jointly optimize the variational and model parameters. The lower bound now becomes:
E q φ (z1 n ,z2 n ,yn|xn,sn) [log p(z 2 ) + log p(y n ) + log p θ (z 1n |z 2n , y n )+ + log p θ (x n |z 1n , s n ) − log q φ (z 1n , z 2n , y n |x n , s n )] (2) where we assume that the posterior q φ (z 1n , z 2n , y n |x n , s n ) is factorized as q φ (z 1n , z 2n , y n |x n , s n ) = q φ (z 1n |x n , s n )q φ (y n |z 1n )q φ (z 2n |z 1n , y n ), and where:
, s n ) with f θ (z 1n , s n ) again being an appropriate probability distribution for the data we are modelling. The model proposed here can be seen as an extension to the 'stacked M1+M2' model originally proposed from , where we have additionally introduced the nuisance variable s during the feature extraction. Thus following  we can also handle the 'semisupervised' case, i.e., missing labels. In situations where the label is observed the lower bound takes the following form (exploiting the fact that we can compute some Kullback-Leibler divergences explicitly in our case):
(3) and in the case that it is not observed we use q(y n |z 1n ) to 'impute' our data:
therefore the final objective function is:
where the last term is introduced so as to ensure that the predictive posterior q φ (y|z 1 ) learns from both labeled and unlabeled data. This semi-supervised model will be called "VAE" in our experiments.
However, there is a subtle difference between the approach of  and our model. Instead of training separately each layer of stochastic variables we optimize the model jointly. The potential advantages of this approach are two fold: as we previously mentioned if the label y and the nuisance information s are correlated then training a (conditional) feature extractor separately poses the danger of creating a degenerate representation with respect to the label y. Furthermore the label information will also better guide the feature extraction towards the more salient parts of the data, thus maintaining most of the (predictive) information.
section: FURTHER INVARIANCE VIA MAXIMUM MEAN DISCREPANCY
Despite the fact that we have a model that encourages statistical independence between sand z 1 a-priori we might still have some dependence in the (approximate) marginal posterior q φ (z 1 |s). In particular, this can happen if the label y is correlated with the sensitive variable s, which can allow information about s to "leak" into the posterior. Thus instead we could maximize a "penalized" lower bound where we impose some sort of regularization on the marginal q φ (z 1 |s). In the following we will describe one way to achieve this regularization through the Maximum Mean Discrepancy (MMD) () measure.
section: MAXIMUM MEAN DISCREPANCY
Consider the problem of determining whether two datasets {X} ∼ P 0 and {X } ∼ P 1 are drawn from the same distribution, i.e., P 0 = P 1 . A simple testis to consider the distance between empirical statistics ψ(·) of the two datasets:
Expanding the square yields an estimator composed only of inner products on which the kernel trick can be applied. The resulting estimator is known as Maximum Mean Discrepancy (MMD) ():
Asymptotically, fora universal kernel such as the Gaussian kernel k(x, x ) = e −γx−x 2 , MMD (X, X ) is 0 if and only if P 0 = P 1 . Equivalently, minimizing MMD can be viewed as matching all of the moments of P 0 and P 1 . Therefore, we can use it as an extra "regularizer" and force the model to try to match the moments between the marginal posterior distributions of our latent variables, i.e., q φ (z 1 |s = 0) and q φ (z 1 |s = 1) (in the case of binary nuisance information s 1 ). By adding the MMD penalty into the lower bound of our aforementioned VAE architecture we obtain our proposed model, the "Variational Fair Autoencoder" (VFAE):
where:
section: FAST MMD VIA RANDOM FOURIER FEATURES
A naive implementation of MMD in minibatch stochastic gradient descent would require computing the M ×M Gram matrix for each minibatch during training, where M is the minibatch size. Instead, we can use random kitchen sinks) to compute a feature expansion such that computing the estimator (6) approximates the full MMD (7). To compute this, we draw a random
where K is the dimensionality of x, Dis the number of random features and each entry of Wis drawn from a standard isotropic Gaussian. The feature expansion is then given as:
where b is a D-dimensional uniform random vector with entries in. have successfully applied the idea of using random kitchen sinks to approximate MMD. This estimator is fairly accurate, and is typically much faster than the full MMD penalty. We use D = 500 in our experiments.
1 In case that we have more than two states for the nuisance information s, we minimize the MMD penalty between each marginal q(z|s = k) and q(z), i.e., K k=1 MMD(Z1 s=k , Z1) for all possible states K of s.
section: EXPERIMENTS
We performed experiments on the three datasets that correspond to a "fair" classification scenario and were previously used by. In these datasets the "nuisance" or sensitive variable sis significantly correlated with the label y thus making the proper removal of s challenging. Furthermore, we also experimented with the Amazon reviews dataset to make a connection with the "domain-adaptation" literature. Finally, we also experimented with a more general task on the extended Yale B dataset; that of learning invariant representations.
section: DATASETS
For the fairness task we experimented with three datasets that were previously used by. The German dataset is the smallest one with 1000 data points and the objective is to predict whether a person has a good or bad credit rating.
For the domain adaptation task we used the Amazon reviews dataset (with similar preprocessing) that was also employed by and. It is composed from text reviews about particular products, where each product belongs to one out of four different domains: "books", "dvd", "electronics" and "kitchen". As a result we performed twelve domain adaptation tasks. The labels y correspond to the sentiment of each review, i.e. either positive or negative.
Since each feature vector x is composed from counts of unigrams and bigrams we used a Poisson distribution for p θ (x n |z 1n , s n ) = Poisson(x n |λ n = e f θ (z1 n ,sn) ). It is also worthwhile to mention that we can fully exploit the semi-supervised nature of our model in this dataset, and thus for training we only use the source domain labels and consider the labels of the target domain as "missing".
For the general task of learning invariant representations we used the Extended Yale B dataset, which was also employed in a similar fashion by. It is composed from face images of 38 people under different lighting conditions (directions of the light source). Similarly to, we created 5 states for the nuisance variable s: light source in upper right, lower right, lower left, upper left and the front. The labels y correspond to the identity of the person. Following, we used the same training, test set and no validation set. For the p(x n |z 1n , s n ) distribution we used a Gaussian with means constrained in the 0-1 range (since we have intensity images) by a sigmoid, i.e. p θ (x n |z 1n , s n ) = N (x n |µ n = σ(f θ (z 1n , s n )), σ n = e f θ (z1 n ,sn) ).
section: EXPERIMENTAL SETUP
For the Adult dataset both encoders, for z 1 and z 2 , and both decoders, for z 1 and x, had one hidden layer of 100 units. For the Health dataset we had one hidden layer of 300 units for the z 1 encoder and x decoder and one hidden layer of 150 units for the z 2 encoder and z 1 decoder. For the much smaller German dataset we used 60 hidden units for both encoders and decoders. Finally, for the Amazon reviews and Extended Yale B datasets we had one hidden layer with 500, 400 units respectively for the z 1 encoder, x decoder, and 300, 100 units respectively for the z 2 encoder and z 1 decoder. of the MMD, β, was tuned according to a validation set. The scaling of the supervised cost was low (α = 1) for the Adult, Health and German datasets due to the correlation of s with y. On the Amazon reviews and Extended Yale B datasets however the scaling of the supervised cost was higher: α = 100 · Nbatch source+Nbatch target Nbatch source for the Amazon reviews dataset (empirically determined after observing the classification loss on the first few iterations on the first source-target pair) and α = 200 for the Extended Yale B dataset. Similarly, the scaling of the MMD penalty was β = 100 · N batch for the Amazon reviews dataset and β = 200 · N batch for the Extended Yale B.
Our evaluation is geared towards two fronts; removing information about sand classification accuracy for y. To measure the information about sin our new representation we simply train a classifier to predict s from z 1 . We utilize both Logistic Regression (LR) which is a simple linear classifier, and Random Forest (RF) which is a powerful non-linear classifier. Since on the datasets that we experimented with the nuisance variable sis binary we can easily find the random chance accuracy for sand measure the discriminatory information of sin z 1 . Furthermore, we also used the discrimination metric from as well a more "informed" version of the discrimination metric that instead of the predictions, takes into account the probabilities of the correct class. They are provided in the appendix A. Finally, for the classification performance on y we used the predictive posterior q φ (y|z 1 ) for the VAE/VFAE and a simple Logistic Regression for the original representations x. It should be noted that for the VFAE and VAE models we use a sample from q φ (z 1 |x, s) to make predictions, instead of using the mean. We found that the extra noise helps with invariance.
We implemented the Learning Fair Representations () method (LFR) as a baseline using K = 50 dimensions for the latent space. To measure the accuracy on yin the results below we similarly used the LFR model predictions.
section: RESULTS
section: FAIR CLASSIFICATION
The results for all three datasets can be seen in. Since we are dealing with the "fair" classification scenario here, low accuracy and discrimination against sis more important than the accuracy on y (as long as we do not produce degenerate representations).
On the Adult dataset, the highest accuracy on the label y and the lowest discrimination against sis obtained by our LFR baseline. Despite the fact that LFR appears to give the best tradeoff between accuracy and discrimination, it appears to retain information about sin its representation, which is discovered from the random forest classifier. In that sense, the VFAE method appears to do the best job in actually removing the sensitive information and maintaining most of the predictive information. Furthermore, the introduction of the MMD penalty in the VFAE model seems to provide a significant benefit with respect to our discrimination metrics, as both were reduced considerably compared to the regular VAE.
On the German dataset, all methods appear to be invariant with respect to the sensitive information s. However this is not the case for the discrimination metric, since LFR does appear to retain information compared to the VAE and VFAE. The MMD penalty in VFAE did seem improve the discrimination scores over the original VAE, while the accuracy on the labels y remained similar.
As for the Health dataset; this dataset is extremely imbalanced, with only 15% of the patients being admitted to a hospital. Therefore, each of the classifiers seems to predict the majority class as the label y for every point. For the invariance against s however, the results were more interesting. On the one hand, the VAE model on this dataset did maintain some sensitive information, which could be identified both linearly and non-linearly. On the other hand, VFAE and the LFR methods were able to retain less information in their latent representation, since only Random Forest was able to achieve higher than random chance accuracy. This further justifies our choice for including the MMD penalty in the lower bound of the VAE. .
In order to further assess the nature of our new representations, we visualized two dimensional) embeddings of the z 1 representations, obtained from the model trained on the Adult dataset, in. As we can see, the nuisance/sensitive variables scan be identified both on the original representation x and on a latent representation z 1 that does not have the MMD penalty and the independence properties between z 1 and sin the prior. By   Blue colour corresponds to males whereas red colour corresponds to females.
section: DOMAIN ADAPTATION
As for the domain adaptation scenario and the Amazon reviews dataset, the results of our VFAE model can be seen in. Our model was successful in factoring out the domain information, since the accuracy, measured both linearly (LR) and non-linearly (RF), was towards random chance (which for this dataset is 0.5). We should also mention that, on this dataset at least, completely removing information about the domain does not guarantee a better performance on y. The same effect was also observed by and. As far as the accuracy on y is concerned, we compared against a recent neural network based state of the art method for domain adaptation, Domain Adversarial Neural Network (DANN) (). As we can observe in table 1, our accuracy on the labels y is higher on 9 out of the 12 domain adaptation tasks whereas on the remaining 3 it is quite similar to the DANN architecture.: Results on the Amazon reviews dataset. The DANN column is taken directly from (the column that uses the original representation as input).
Source -
section: LEARNING INVARIANT REPRESENTATIONS
Regarding the more general task of learning invariant representations; our results on the Extended Yale B dataset also demonstrate our model's ability to learn such representations. As expected, on the original representation x the lighting conditions, s, are well identifiable with almost perfect accuracy from both RF and LR. This can also be seen in the two dimensional embeddings of the original space x in: the images are mostly clustered according to the lighting conditions. As soon as we utilize our VFAE model we simultaneously decrease the accuracy on s, from 96% to about 50%, and increase our accuracy on y, from 78% to about 85%. This effect can also be seen in: the images are now mostly clustered according to the person ID (the label y).
It is clear that in this scenario the information about sis purely "nuisance" with respect to the labels y. Therefore, by using our VFAE model we are able to obtain improved generalization and classification performance by effectively removing s from our representations.  returns 1 or 0, while p(z k = 1|x i , s = 1) returns values between values 0 and 1, then the penalty could still be satisfied, but information could still leak through. We addressed both of these issues in this paper.
Domain adaptation can also be cast as learning representations that are "invariant" with respect to a discrete variable s, the domain. Most similar to our work are neural network approaches which try to match the feature distributions between the domains. This was performed in an unsupervised way with mSDA) by training denoising autoencoders jointly on all domains, thus implicitly obtaining a representation general enough to explain both the domain and the data. This is in contrast to our approach where we instead try to learn representations that explicitly remove domain information during the learning process. For the latter we find more similarities with "domain-regularized" supervised approaches that simultaneously try to predict the label fora data point and remove domain specific information. This is done with either MMD) or adversarial ( penalties at the hidden layers of the network. In our model however the main "domain-regularizer" stems from the independence properties of the prior over the domain and latent representations. We also employ MMD on our model but from a different perspective since we consider a slightly more difficult case where the domain sand label y are correlated; we need to ensure that we remain as "invariant" as possible since q φ (y|z 1 ) might 'leak' information about s.
section: CONCLUSION
We introduce the Variational Fair Autoencoder (VFAE), an extension of the semi-supervised variational autoencoder in order to learn representations that are explicitly invariant with respect to some known aspect of a dataset while retaining as much remaining information as possible. We further use a Maximum Mean Discrepancy regularizer in order to further promote invariance in the posterior distribution over latent variables. We apply this model to tasks involving developing fair classifiers that are invariant to sensitive demographic information and show that it produces a better tradeoff with respect to accuracy and invariance. As a second application, we consider the task of domain adaptation, where the goal is to improve classification by training a classifier that is invariant to the domain. We find that our model is competitive with recently proposed adversarial approaches. Finally, we also consider the more general task of learning invariant representations. We can observe that our model provides a clear improvement against a neural network that incorporates a Maximum Mean Discrepancy penalty.
section: A DISCRIMINATION METRICS
The Discrimination metric () and the Discrimination metric that takes into account the probabilities of the correct class are mathematically formalized as:
where I[y s=0 n ] = 1 for the predictions y n that were done on the datapoints with nuisance variable s = 0, N s=0 denotes the total amount of datapoints that had nuisance variable s = 0 and p(y s=0 n ) denotes the probability of the prediction y n for the datapoints with s = 0. For the predictions and their respective probabilities we used a Logistic Regression classifier.
section: B PROXY A-DISTANCE (PAD) FOR AMAZON REVIEWS DATASET
Similarly to, we also calculated the Proxy A-distance (PAD) scores for the raw data x and for the z 1 representations of VFAE. Briefly, Proxy Adistance is an approximation to the H-divergence measure of domain distinguishability proposed in and. To compute it we first need to train a learning algorithm on the task of discriminating examples from the source and target domain. Afterwards we can use the test error of that algorithm in the following formula:
It is clear that low PAD scores correspond to low discrimination of the source and target domain examples from the classifier. To obtain for our model we used Logistic Regression. The resulting plot can be seen in, where we have also added the plot from DANN (, where they used a linear Support Vector Machine for the classifier, as a reference. It can be seen that our VFAE model can factor out the information about s better, since the PAD scores on our new representation are, overall, lower than the ones obtained from the DANN architecture.
