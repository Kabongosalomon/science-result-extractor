section: title
Black Holes and White Rabbits: Metaphor Identification with Visual Features
section: abstract
Metaphor is pervasive in our communication, which makes it an important problem for natural language processing (NLP). Numerous approaches to metaphor processing have thus been proposed, all of which relied on linguistic features and textual data to construct their models. Human metaphor comprehension is, however, known to rely on both our linguistic and perceptual experience, and vision can play a particularly important role when metaphorically projecting imagery across domains. In this paper, we present the first metaphor identification method that simultaneously draws knowledge from linguistic and visual data. Our results demonstrate that it outperforms linguistic and visual models in isolation, as well as being competitive with the best-performing metaphor identification methods, that rely on hand-crafted knowledge about domains and perception.
section: Introduction
Metaphor lends vividness, sophistication and clarity to our thought and communication. At the same time, it plays a fundamental structural role in our cognition, helping us to organise and project knowledge (). Metaphors arise due to systematic associations between distinct, and seemingly unrelated, concepts. For instance, when we talk about "the turning wheels of apolitical regime", "rebuilding the campaign machinery" or "mending foreign policy", we view politics and political systems in terms of mechanisms, they can function, break, be mended etc. The existence of this association allows us to transfer knowledge and imagery from the domain of mechanisms (the source domain) to that of political systems (the target domain). According to, such metaphorical mappings, or conceptual metaphors, form the basis of metaphorical language.
Metaphor is pervasive in our communication, which makes it important for NLP applications dealing with real-world text. A number of approaches to metaphor processing have thus been proposed, using supervised classification), clustering, vector space models (), lexical resources () and web search with lexicosyntactic patterns. So far, these and other metaphor processing works relied on textual data to construct their models. Yet, several experiments indicated that perceptual properties of concepts, such as concreteness and imageability, are important features for metaphor identification). However, all of these methods used manually-annotated linguistic resources to determine these properties (such as the MRC concreteness database). To the best of our knowledge, there has not yet been a metaphor processing method that employed information learned from both linguistic and visual data. Ample re-search in cognitive science suggests that human meaning representations are not merely a product of our linguistic exposure, but are also grounded in our perceptual system and sensori-motor experience (. Semantic models integrating information from multiple modalities have been shown successful in tasks such as modeling semantic similarity and relatedness), lexical entailment (), compositionality) and bilingual lexicon induction (). Using visual information is particularly relevant to modelling metaphor, where imagery is ported across domains.
In this paper, we present the first metaphor identification method integrating meaning representations learned from linguistic and visual data. We construct our representations using a skip-gram model of trained on textual data to obtain linguistic embeddings and a deep convolutional neural network) trained on image data to obtain visual embeddings. Linguistic word embeddings have been previously successfully used to answer analogy questions. These works have shown that such representations capture the nuances of word meaning needed to recognise relational similarity (e.g. between pairs "king : queen" and "man : woman"), quantified by the respective vector offsets (king -queen ≈ man -woman). In our experiments, we investigate how well these representations can capture information about source and target domains and their interaction in a metaphor. We then enrich these representations with visual information. We first acquire linguistic and visual embeddings for individual words and then extend the methods to learn embeddings for longer phrases. The focus of our experiments is on metaphorical expressions in verb-subject, verb-direct object and adjectival modifier-noun constructions. We thus learn embeddings for verbs, adjectives, nouns, as well as verb-noun and adjective-noun phrases. We then use a set of arithmetic operations on word and phrase embedding vectors to classify phrases as literal or metaphorical. To the best of our knowledge, our approach is also the first one to apply word or phrase embeddings to the task of metaphor identification.
Our results demonstrate that the joint model incorporating linguistic and visual representations outperforms the linguistic model in isolation, as well as being competitive with the best-performing metaphor identification methods that rely on hand-crafted information about domains, concreteness and imageability. is notable as they focused on compositional rather than categorical features. They trained an SVM with dependency-tree kernels to capture compositional information, using lexical, part-of-speech tag and WordNet supersense representations of sentence trees.  aimed at modelling conceptual information. They derived semantic signatures of texts as sets of highly-related and interlinked WordNet synsets. The semantic signatures served as features to train a set of classifiers (maximum entropy, decision trees, SVM, random forest) that map new metaphors to the semantic signatures of the known ones. hypothesized that metaphor is commonly used to describe abstract concepts in terms of more concrete or physical experiences. Thus, Turney and colleagues expected that there would be some discrepancy in the level of concrete-ness of source and target terms in the metaphor. They developed a method to automatically measure concreteness of words and applied it to identify verbal and adjectival metaphors. and followed in Turney's steps, extending the models by incorporating information about selectional preferences. and focused on modeling topical structure of text to identify metaphor. Their main hypothesis was that metaphorical language (coming from a different domain) would represent atypical vocabulary within the topical structure of the text. acquired a set of topic chains by linking semantically related words in a given text. They then looked for vocabulary outside the topic chain and yet connected to topic chain words via syntactic dependencies and exhibiting high imageability. used LDA topic modelling to identify sets of source and target domain vocabulary. In their system, the acquired topics represented source and target domains, and sentences containing vocabulary from both were tagged as metaphorical.
section: Related work
Other approaches addressed automatic identification of conceptual metaphor. automatically acquired domain-specific selectional preferences of verbs, and then, by mapping their common nominal arguments in different domains, arrived at the corresponding metaphorical mappings. For example, the verb pour has a strong preference for liquids in the LAB domain and for money in the FINANCE domain, suggesting the mapping MONEY is LIQUID.  pointed out that the metaphorical uses of words constitute a large portion of the dependency features extracted for abstract concepts from corpora. For example, the feature vector for politics would contain GAME or MECH-ANISM terms among the frequent features. As a result, distributional clustering of abstract nouns with such features identifies groups of diverse concepts metaphorically associated with the same source domain (or sets of source domains).  exploit this property of co-occurrence vectors to identify new metaphorical mappings starting from a set of examples. used hierarchical clustering to derive a network of concepts in which metaphorical associations are learned in an unsupervised way.
section: Method
section: Learning linguistic representations
We obtained our linguistic representations using the log-linear skip-gram model of. Given a corpus of words wand their contexts c, the model learns a set of parameters θ that maximize the overall corpus probability
where C(w) is a set of contexts of word wand p(c|w; θ) is a softmax function:
where v c and v ware vector representations of c and w. The parameters we need to set are thus v c i and v w i for all words in our word vocabulary V and context vocabulary C, and the set of dimensions i ∈ 1, . . . , d. Given a set D of word-context pairs, embeddings are learned by optimizing the following objective:
We used a recent dump of Wikipedia 1 as our corpus. The text was lemmatized, tagged, and parsed with Stanford CoreNLP (). Words that appeared less than 100 times in their lemmatized form were ignored. The 100-dimensional word and phrase embeddings were learned in two stages: in a first pass, we obtained word-level embeddings (e.g. for white and rabbit) using the standard skip-gram with negative sampling of Eq.; we then obtained phrase embeddings (e.g. for white rabbit) through a second pass over the same corpus. In the second pass, the vectors v c and v c of Eq. were set to their values from the first pass, and kept fixed. Verb-noun phrases were extracted by finding nsubj and dobj arcs with V B head and N N dependent; analogously, adjective-noun phrases were extracted by finding amod arcs with N N head and JJ dependent. No frequency cutoff was applied for phrases. All embeddings were trained on the corpus for 3 epochs, using asymmetric window of 5, and 10 negative samples per word-context pair.
section: Learning visual representations
Visual embeddings were obtained in a manner similar to. Using the deep learning framework Caffe (), we extracted image embeddings from a deep convolutional neural network that was trained on the ImageNet classification task (). The network () consists of 5 convolutional layers, followed by two fully connected rectified linear unit (ReLU) layers that feed into a softmax for classification. The network learns through a multinomial logistic regression objective:
where 1{·} is the indicator function and we train on D examples with K classes. We obtain image embeddings by doing a forward pass with a given image and taking the 4096-dimensional fully connected layer that precedes the softmax (typically called FC7) as the representation of that image.
To construct our embeddings, we used up to 10 images fora given word or phrase, which were obtained through Google Images. It has been shown that images from Google yield higher quality representations than comparable resources such as Flickr and are competitive with hand-crafted datasets). We created our final visual representations for words and phrases by taking the average of the extracted image embeddings fora given word or phrase.
section: Multimodal fusion strategies
While it is desirable to jointly learn representations from different modalities at the same time, this is often not feasible (or may lead to poor performance) due to data sparsity. Instead, we learn uni-modal representations independently, as described above, and then combine them into multi-modal ones. Previous work in multi-modal semantics () investigated different ways of combining, or fusing, linguistic and perceptual cues. When calculating similarity, for instance, one can either combine the representations first and subsequently compute similarity scores; or compute similarity scores independently per modality and afterwards combine the scores. In contrast with joint learning (which has also been called early fusion), these two possibilities represent middle and late fusion, respectively.
We experiment with middle and late fusion strategies. In middle fusion, we L-2 normalise and concatenate the vectors for linguistic and visual representations and then compute a metaphoricity score fora phrase based on this joint representation. In late fusion, we first compute the metaphoricity scores based on linguistic and visual representations independently, and then combine the metaphoricity scores by taking their average.
section: Measuring metaphoricity
We investigate a set of arithmetic operations on the linguistic, visual and multimodal embedding vectors to determine whether the two words in the phrase belong to the same domain or rather a word from one domain is metaphorically used to describe another.
section: Word-level embeddings
In our first set of experiments, we compare embeddings learned for individual words in order to determine whether they come from the same domain. This is done by determining similarity between the representations of the two words in a phrase:
where word 1 is either a verb or an adjective, word 2 is a noun, and similarity is defined as cosine similarity:
We expect the similarity of word representations to be lower for metaphorical expressions (where one word comes from the source domain and one from the target), than for the literal ones (where both words come from the target domain). We will further refer to this method as WORDCOS.
section: Phrase-level embeddings
In our second set of experiments, we investigate compositional properties of metaphorical phrases by comparing the embeddings learned for the whole phrase with those of the individual words in the phrase. This allows us to determine which properties the phrase shares with each of the words, providing another criterion for metaphor identification. We expect that the embeddings of literal phrases will be more similar to the embeddings of individual words in the phrase (or a combination thereof) than those of metaphorical phrases. We use the following measures to test this hypothesis: PHRASCOS1: cos(phrase − word 1 , word 2 ) PHRASCOS2: cos(phrase − word 2 , word 1 ) PHRASCOS3: cos(phrase, word 1 + word 2 ), where phrase is the phrase embedding vector, and word 1 and word 2 are defined as above.
section: Classification
We use a small development set (a collection of phrases annotated as metaphorical or literal) to determine an optimal classification threshold for each of the above scoring methods. We have optimized the threshold by maximizing classification accuracy on the development set. All instances with values above the threshold were considered literal and those with values below the threshold metaphorical. The thresholds were then applied to classify the test instances as literal or metaphorical.
section: Experiments
section: Annotated datasets
We evaluate our method using two datasets manually annotated for metaphoricity:
created a large dataset of adjective-noun pairs that they annotated for metaphoricity. Starting with a 1000 frequent adjectives, they extracted nouns they co-occur within TenTen Web Corpus 4 using SketchEngine and in collections of metaphor on the Web. Tsvetkov et al. divided the data into a training set (containing 884 literal and 884 metaphorical pairs) and test set (111 literal and 111 metaphorical pairs). We will refer to their training set as TSV-TRAIN and to the test set as TSV-TEST. The test set was annotated for metaphoricity by 5 annotators with an inter-annotator agreement of κ = 0.76. shows a portion of the anno-Metaphorical:
Literal gold coin healthy balance dry skin hollow mockery honest opinion honest meal empty can juicy scandal good idea spicy language foggy night stale cliché frosty morning steep discount firm mattress: Annotated adjective-noun pairs from TSV-TEST tated test set. Metaphorical phrases that depend on wider context for their interpretation (e.g. drowning students) were removed. The training set was annotated by one annotator only, and it is thus likely that the annotations are less reliable than those in the test set. We thus evaluate our methods on Tsvetkov et al.'s test set (TSV-TEST). However, we will also report results on TSV-TRAIN to confirm whether the observed trends hold in a larger, though likely noisier, dataset.
We selected the above two datasets since they include examples for different senses (both metaphorical and literal) of the same verbs or adjectives. This allows us to test the extent to which our model is able to discriminate between different word senses, as opposed to merely selecting the most frequent class fora given word.
section: Experimental setup
We divided the verb-and adjective-noun datasets into development and test sets. The verb-noun development set contained 80 instances from MOH (40 literal and 40 metaphorical), leaving us with the test set of 567 verb-noun pairs from MOH. We created the adjective-noun development set using 80 adjective-noun pairs (40 literal and 40 metaphorical) from TSV-TRAIN, leaving all of the 222 adjectivenoun pairs in TSV-TEST for evaluation. Ina separate experiment, we also applied our methods to the remainder of TSV-TRAIN (1688 adjective-noun pairs) to evaluate our system on a larger adjective dataset.
We used the development sets to determine an op- timal threshold value for each of our scoring methods. The thresholds for verb-noun and adjectivenoun phrases were optimized independently using the corresponding development sets. We experimented with the three phrase-level scoring methods on the development sets, and found that PHRAS-COS1 consistently outperformed PHRASCOS2 and PHRASCOS3 for both verb-noun and adjectivenoun phrases. We thus report results for PHRAS-COS1 on our test sets. We first evaluated the performance of WORDCOS and PHRASCOS1 using linguistic and visual representations in isolation, and then evaluated the multimodal models using middle and late fusion strategies. In middle fusion, we concatenated the linguistic and visual vectors, and then applied WORDCOS and PHRASCOS1 methods to the resulting multimodal vectors. We will refer to these methods as WORDMID and PHRASMID respectively. In late fusion, we used an average of linguistic and visual scores to determine metaphoricity. We experimented with three different scoring methods: (1) WORDLATE, where linguistic and visual WORD-COS scores were combined; (2) PHRASLATE, where linguistic and visual PHRASCOS1 scores were combined; and (3) MIXLATE, where linguistic and WORDCOS and visual PHRASCOS1 scores were combined.
section: Results and discussion
We evaluated the performance of our methods on the MOH and TSV-TEST test sets in terms of precision, recall and F-score and the results are presented in respectively. When using linguistic embeddings alone, WORDCOS outperforms 165 Features Method PR F 1 Linguistic WORDCOS 0.73 0.80 0.76 PHRASCOS1 0.43 0.96 0.57 Visual WORDCOS 0.50 0.95 0.66 PHRASCOS1 0.60 0.91 0.73 Multimodal WORDMID 0.59 0.85 0.70 PHRASMID 0.54 0.93 0.68 WORDLATE 0.69 0.72 0.70 PHRASLATE 0.50 1.00 0.67 MIXLATE 0.67 0.96 0.79: System performance on Tsvetkov et al. test set (TSV-TEST) in terms of precision (P ), recall (R) and F-score (F 1)
PHRASECOS1 for both verbs and adjectives by 17-19%. This suggests that linguistic word embeddings already successfully capture domain and compositional information necessary for metaphor identification. In contrast, the visual PHRASECOS1 model, when applied in isolation, tends to outperform the visual WORDCOS model. PHRASCOS1 measures to what extent the meaning of the phrase can be composed by simple combination of the representations of individual words. In metaphorical language, however, a meaning transfer takes place and this is no longer the case. Particularly in visual data, where no linguistic conventionality and stylistic effects take place, PHRASCOS1 captures this property. For adjectives this trend was more evident than for verbs. The visual PHRASECOS1 model, even when applied on its own, attains a high F-score of 0.73 on TSV-TEST, suggesting that concreteness and other visual features are highly informative in identification of adjectival metaphors. This effect was present, though not as pronounced, for verbal metaphors, where the vision-only PHRASECOS1 attains an F-score of 0.66.
The multimodal model, integrating linguistic and visual embeddings, outperforms the linguistic models for both verbs and adjectives, clearly demonstrating the utility of visual features across word classes. The late fusion method MIXLATE, which combines the linguistic WORDCOS score and the visual PHRASECOS1, attains an F-score of 0.75 for verbs and 0.79 for adjectives, which makes it bestperforming among our fusion strategies. When the same type of scoring (i.e. either WORDCOS or PHRASCOS1) is used with both linguistic and visual embeddings, middle and late fusion techniques attain comparable levels of performance, with WORD-COS being the leading measure. The reason behind the higher performance of MIXLATE is likely to be the combination of different scoring methods, one of which is more suitable for the linguistic model and the other for the visual one.
The differences between verbs and adjectives with respect to the utility of visual information can be explained by the following two factors. Firstly, previous psycholinguistic research on abstractness and concreteness ( suggests that humans find it easier to judge the level of concreteness of adjectives and nouns than that of verbs. It is thus possible that visual representations capture the concreteness of adjectives and nouns more accurately than that of verbs. Besides concreteness, it is also likely that perceptual properties in general are more important for the semantics of nouns (e.g. objects) and adjectives (their attributes), than for the semantics of verbs (actions), since the latter are grounded in our motor activity and not merely perception. Secondly, following the majority of multimodal semantic models, we used images as our visual data rather than videos. However, some verbs, e.g. stative verbs and verbs for continuous actions, maybe better captured in video than images. We thus expect that using video data along with the images as input to the acquisition of visual embeddings is likely to improve metaphor identification performance for verbal metaphors. However, we leave the investigation of this issue for future work.
In an additional experiment, we evaluated our methods on the larger TSV-TRAIN dataset (specifically using its portion that was not employed for development purposes) and the trends observed were the same. MIXLATE attained an F-score of 0.71, outperforming language-only and vision-only models. The performance of all scoring methods on TSV-TRAIN was lower than that on the TSV-TEST. This maybe the result of the fact that the labelling of TSV-TRAIN was less consistent than that of TSV-TEST. As TSV-TEST is a set of metaphors annotated by 5 annotators with a high agreement, the evaluation on TSV-TEST is likely to be more reliable.
It is important to note that, unlike other supervised approaches to metaphor, our methods do not require large training sets to learn the respective thresholds. The results reported here were obtained using only 80 annotated examples for training. This is sufficient since the necessary lexical knowledge and the knowledge about domain, concreteness and visual properties of concepts is already captured in the linguistic and visual embeddings. However, we additionally investigated how stable the thresholds learned by the model are using the TSV-TRAIN dataset. For this purpose, we divided the dataset into 10 portions of approximately 170 examples (balanced for metaphoricity). We then trained the thresholds first on a small set of 170 examples and then increasing the dataset by 170 examples at each round. The thesholds appear to be relatively stable, with a standard deviation of 0.03 for MIXLATE; 0.02 for WORDCOS (linguistic); and 0.05 for PHRASECOS1 (visual). This suggests that our methods do not require a large annotated dataset and training on a small number of examples is sufficient.
Despite the limited need in training data and no reliance on hand-coded lexical resources, the performance of our method favourably compares to that of existing metaphor identification systems, that typically use such resources. For instance, used hand-annotated abstractness scores for words to develop their system, and reported an F-score of 0.68 for verb-noun metaphors and an accuracy of 0.79 for adjectivenoun metaphors (though the latter was only evaluated on a small dataset of 10 adjectives and Turney and colleagues did not report results in terms of F-score, which is likely to be lower). Our use of visual features is inline with Turney's hypothesis concerning the relevance of concreteness features to metaphor processing. However, our results indicate that extracting this information from image data directly is a more suitable way to capture the concreteness itself, as well as capturing other relevant perceptual properties of concepts. The method of used both concreteness features (which they extracted from the MRC concreteness database) and hand-coded domain information for words (which they extracted from WordNet). They report a high F-score of 0.85 for adjective-noun classification on TSV-TEST. The performance of our method on the same dataset is a little lower than that of Tsvetkov et al. However, we do not use any hand-annotated resources and acquire linguistic, domain and perceptual information in the data-driven way. It is thus encouraging that, even though resource-lean, our methods approach the performance level of the methods using hand-annotated features (as in case of) or outperform them (as in case of,, Dunn (2013b), ,,, Beigman and many others). For further comparison with these approaches and their results see a recent review by Shutova (2015).
section: Conclusion
We presented the first method that uses visual features for metaphor identification. Our results demonstrate that the multi-modal model combining both linguistic and visual knowledge outperforms language-only models, suggesting the importance of visual information for metaphor processing. Unlike previous metaphor processing approaches, that employed hand-crafted resources to model perceptual properties of concepts, our method learns visual knowledge from images directly, thus reducing the risk of human annotation noise and having a wider coverage and applicability. Since the method relies on automatically acquired lexical knowledge, in the form of linguistic and visual embeddings, and is otherwise resource-independent, it can be applied to unrestricted text in any domain and easily tailored to other metaphor processing tasks.
In the future, it would be interesting to apply multimodal word and phrase embeddings to automatically interpret metaphorical language, e.g. by deriving literal or conventional paraphrases for metaphorical expressions (similarly to the task of Shutova (2010)). Multimodal embeddings are also likely to provide useful information for the models of metaphor translation, as they have already proved successful in bilingual lexicon induction more generally (). Finally, it would be interest-ing to further investigate compositional properties of metaphorical language using multimodal phrase embeddings and to apply the embeddings to automatically generalise metaphorical associations between distinct concepts or domains.
