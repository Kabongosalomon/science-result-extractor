section: title
A Thorough Examination of the CNN/Daily Mail Reading Comprehension Task
section: abstract
Enabling a computer to understand a document so that it can answer comprehension questions is a central, yet unsolved goal of NLP. A key factor impeding its solution by machine learned systems is the limited availability of human-annotated data. Hermann et al. (2015) seek to solve this problem by creating over a million training examples by pairing CNN and Daily Mail news articles with their summarized bullet points, and show that a neural network can then be trained to give good performance on this task. In this paper, we conduct a thorough examination of this new reading comprehension task. Our primary aim is to understand what depth of language understanding is required to do well on this task. We approach this from one side by doing a careful hand-analysis of a small subset of the problems and from the other by showing that simple, carefully designed systems can obtain accuracies of 72.4% and 75.8% on these two datasets, exceeding current state-of-the-art results by over 5% and approaching what we believe is the ceiling for performance on this task.1
section: Introduction
Reading comprehension (RC) is the ability to read text, process it, and understand its meaning.2 How to endow computers with this capacity has been an elusive challenge and a long-standing goal of Artificial Intelligence (e.g.,). Genuine reading comprehension involves interpretation of 1Our code is available at https://github.com/danqi/ rc-cnn-dailymail.
2https://en.wikipedia.org/wiki/Reading_ comprehension the text and making complex inferences. Human reading comprehension is often tested by asking questions that require interpretive understanding of a passage, and the same approach has been suggested for testing computers .
In recent years, there have been several strands of work which attempt to collect human-labeled data for this task -in the form of document, question and answer triples -and to learn machine learning models directly from it (. However, these datasets consist of only hundreds of documents, as the labeled examples usually require considerable expertise and neat design, making the annotation process quite expensive. The subsequent scarcity of labeled examples prevents us from training powerful statistical models, such as deep learning models, and would seem to prevent a system from learning complex textual reasoning capacities.
Recently, researchers at DeepMind ( had the appealing, original idea of exploiting the fact that the abundant news articles of CNN and Daily Mail are accompanied by bullet point summaries in order to heuristically create large-scale supervised training data for the reading comprehension task. gives an example. Their idea is that a bullet point usually summarizes one or several aspects of the article. If the computer understands the content of the article, it should be able to infer the missing entity in the bullet point. This is a clever way of creating supervised data cheaply and holds promise for making progress on training RC models; however, it is unclear what level of reading comprehension is actually needed to solve this somewhat artificial task and, indeed, what statistical models that do reasonably well on this task have actually learned.
In this paper, our aim is to provide an in-depth and thoughtful analysis of this dataset and what level of natural language understanding is needed to ( @entity4 ) if you feel a ripple in the force today , it maybe the news that the official @entity6 is getting its first gay character . according to the sci-fi website @entity9 , the upcoming novel " @entity11 " will feature a capable but flawed @entity13 official named @entity14 who " also happens to be a lesbian . " the character is the first gay figure in the official @entity6 --the movies , television shows , comics and books approved by @entity6 franchise owner @entity22 --according to @entity24 , editor of " @entity6 " books at @entity28 imprint @entity26 . do well on it. We demonstrate that simple, carefully designed systems can obtain high, state-of-the-art accuracies of 72.4% and 75.8% on CNN and Daily Mail respectively. We do a careful hand-analysis of a small subset of the problems to provide data on their difficulty and what kinds of language understanding are needed to be successful and we try to diagnose what is learned by the systems that we have built. We conclude that: (i) this dataset is easier than previously realized, (ii) straightforward, conventional NLP systems can do much better on it than previously suggested, (iii) the distributed representations of deep learning systems are very effective at recognizing paraphrases, (iv) partly because of the nature of the questions, current systems much more have the nature of single-sentence relation extraction systems than larger-discoursecontext text understanding systems, (v) the systems that we present here are close to the ceiling of performance for single-sentence and unambiguous cases of this dataset, and (vi) the prospects forgetting the final 20% of questions correct appear poor, since most of them involve issues in the data preparation which undermine the chances of answering the question (coreference errors or anonymization of entities making understanding too difficult).
section: Passage
section: The Reading Comprehension Task
The RC datasets introduced in ( an example4: it consists of a passage p, a question q and an answer a, where the passage is a news article, the question is a cloze-style task, in which one of the article's bullet points has had one entity replaced by a placeholder, and the answer is this questioned entity. The goal is to infer the missing entity (answer a) from all the possible entities which appear in the passage. A news article is usually associated with a few (e.g., 3-5) bullet points and each of them highlights one aspect of its content.
The text has been run through a Google NLP pipeline. It it tokenized, lowercased, and named entity recognition and coreference resolution have been run. For each coreference chain containing at least one named entity, all items in the chain are replaced by an @entityn marker, fora distinct index n. argue convincingly that such a strategy is necessary to ensure that systems approach this task by understanding the passage in front of them, rather than by using world knowledge or a language model to answer questions without needing to understand the passage. However, this also gives the task a somewhat artificial character. On the one hand, systems are greatly helped by entity recognition and coreference having already been performed; on the other, they suffer when either of these modules fail, as they do (in, "the character" should probably be coreferent with @entity14; clearer examples of failure appear later on in our data analysis). Moreover, this inability to use world knowledge also makes it much more difficult fora human to do this task -occasionally it is very difficult or impossible fora human to determine the correct answer when presented with an item anonymized in this way.
The creation of the datasets benefits from the sheer volume of news articles available online, so they offer a large and realistic testing ground for statistical models. provides some statistics on the two datasets: there are 380k and 879k training examples for CNN and Daily Mail respectively. The passages are around 30 sentences and 800 tokens on average, while each question contains around 12-14 tokens.
In the following sections, we seek to more deeply understand the nature of this dataset. We first build some straightforward systems in order to get a better idea of a lower-bound for the performance of current NLP systems. Then we turn to data analysis of a sample of the items to examine their nature and an upper bound on performance.
section: CNN Daily Mail
section: Our Systems
In this section, we describe two systems we implemented -a conventional entity-centric classifier and an end-to-end neural network. While do provide several baselines for performance on the RC task, we suspect that their baselines are not that strong. They attempt to use a frame-semantic parser, and we feel that the poor coverage of that parser undermines the results, and is not representative of what a straightforward NLP system -based on standard approaches to factoid question answering and relation extraction developed over the last 15 years -can achieve. Indeed, their frame-semantic model is markedly inferior to another baseline they provide, a heuristic word distance model. At present just two papers are available presenting results on this RC task, both presenting neural network approaches: (Hermann et al., 2015) and (. While the latter is wrapped in the language of end-to-end memory networks, it actually presents a fairly simple window-based neural network classifier running on the CNN data. Its success again raises questions about the true nature and complexity of the RC task provided by this dataset, which we seek to clarify by building a simple attention-based neural net classifier. Given the (passage, question, answer) triple (p, q, a), p = {p 1 , . . . , pm } and q = {q 1 , . . . , q l } are sequences of tokens for the passage and question sentence, with q containing exactly one "@place-holder" token. The goal is to infer the correct entity a ∈ p ∩ E that the placeholder corresponds to, where E is the set of all abstract entity markers. Note that the correct answer entity must appear in the passage p.
section: Entity-Centric Classifier
We first build a conventional feature-based classifier, aiming to explore what features are effective for this task. This is similar in spirit to (), which at present has very competitive performance on the MCTest RC dataset (. The setup of this system is to design a feature vector f p,q (e) for each candidate entity e, and to learn a weight vector θ such that the correct answer a is expected to rank higher than all other candidate entities:
We employ the following feature templates:
1. Whether entity e occurs in the passage.
2. Whether entity e occurs in the question.
3. The frequency of entity e in the passage.
4. The first position of occurence of entity e in the passage.
5. n-gram exact match: whether there is an exact match between the text surrounding the placeholder and the text surrounding entity e. We have features for all combinations of matching left and/or right one or two words.
6. Word distance: we align the placeholder with each occurrence of entity e, and compute the average minimum distance of each non-stop question word from the entity in the passage.
7. Sentence co-occurrence: whether entity e cooccurs with another entity or verb that appears in the question, in some sentence of the passage.
section: End-to-end Neural Network
Our neural network system is based on the AttentiveReader model proposed by). The framework can be described in the following three steps (see): ( @entity4 ) if you feel a ripple in the force today , it maybe the news that the official @entity6 is getting its first gay character . according to the sci-fi website @entity9 , the upcoming novel " @entity11 " will feature a capable but flawed @entity13 official named @entity14 who " also happens to be a lesbian . " the character is the first gay figure in the official @entity6 --the movies , television shows , comics and books approved by @entity6 franchise owner @entity22 --according to @entity24 , editor of " @entity6 " books at @entity28 imprint @entity26 .: Our neural network architecture for the reading comprehension task.
section: Passage
Encoding: First, all the words are mapped to ddimensional vectors via an embedding matrix E ∈ R d× | V | ; therefore we have p:
Next we use a shallow bi-directional LSTM with hidden size˜hsize˜ size˜h to encode contextual embeddings˜pbeddings˜ beddings˜p i of each word in the passage,
h. Meanwhile, we use another bi-directional LSTM to map the question q 1 , . . . , q l to an embedding q ∈ Rh .
Attention: In this step, the goal is to compare the question embedding and all the contextual embeddings, and select the pieces of information that are relevant to the question. We compute a probability distribution α depending on the degree of relevance between word pi (in its context) and the question q and then produce an output vector o which is a weighted combination of all contextual embeddings { ˜ pi }:
W s ∈ R h×h is used in a bilinear term, which allows us to compute a similarity between q and˜pand˜ and˜p i more flexibly than with just a dot product.
Prediction: Using the output vector o, the system outputs the most likely answer using:
Finally, the system adds a softmax function on top of W a o and adopts a negative loglikelihood objective for training. • After obtaining the weighted contextual embeddings o, we use o for direct prediction. In contrast, the original model in () combined o and the question embedding q via another non-linear layer before making final predictions. We found that we could remove this layer without harming performance. We believe it is sufficient for the model to learn to return the entity to which it maximally gives attention.
• The original model considers all the words from the vocabulary V in making predictions. We think this is unnecessary, and only predict among entities which appear in the passage.
Of these changes, only the first seems important; the other two just aim at keeping the model simple.
Window-based MemN2Ns. Another recent neural network approach proposed by) is based on a memory network architecture ( . We think it is highly similar in spirit. The biggest difference is their way of encoding passages: they demonstrate that it is most effective to only use a 5-word context window when evaluating a candidate entity and they use a positional unigram approach to encode the contextual embeddings: if a window consists of 5 words x 1 , . . . , x 5 , then it is encoded as 5 i=1 E i (x i ), resulting in 5 separate embedding matrices to learn. They encode the 5-word window surrounding the placeholder in a similar way and all other words in the question text are ignored. In addition, they simply use a dot product to compute the "relevance" between the question and a contextual embedding. This simple model nevertheless works well, showing the extent to which this RC task can be done by very local context matching.
section: Experiments
section: Training Details
For training our conventional classifier, we use the implementation of LambdaMART () in the RankLib package.5 We use this ranking algorithm since our problem is naturally a ranking problem and forests of boosted decision trees have been very successful lately (as seen, e.g., in many recent Kaggle competitions). We do not use all the features of LambdaMART since we are only scoring 1/0 loss on the first ranked proposal, rather than using an IR-style metric to score ranked results. We use Stanford's neural network dependency parser ) to parse all our document and question text, and all other features can be extracted without additional tools.
For training our neural networks, we only keep the most frequent |V | = 50k words (including entity and placeholder markers), and map all other words to an <unk> token. We choose word embedding size d = 100, and use the 100-dimensional pretrained GloVe word embeddings () for initialization. The attention and output parameters are initialized from a uniform distribution between (−0.01, 0.01), and the LSTM weights are initialized from a Gaussian distribution N (0, 0.1).
We use hidden size h = 128 for CNN and 256 for Daily Mail. Optimization is carried out using 5https://sourceforge.net/p/lemur/wiki/ RankLib/. vanilla stochastic gradient descent (SGD), with a fixed learning rate of 0.1. We sort all the examples by the length of its passage, and randomly sample a mini-batch of size 32 for each update. We also apply dropout with probability 0.2 to the embedding layer and gradient clipping when the norm of gradients exceeds 10.
All of our models are run on a single GPU (GeForce GTX TITAN X), with roughly a runtime of 6 hours per epoch for CNN, and 15 hours per epoch for Daily Mail. We run all the models up to 30 epochs and select the model that achieves the best accuracy on the development set. presents our main results. The conventional feature-based classifier obtains 67.9% accuracy on the CNN test set. Not only does this significantly outperform any of the symbolic approaches reported in (, it also outperforms all the neural network systems from their paper and the best single-system result reported so far from (. This suggests that the task might not be as difficult as suggested, and a simple feature set can cover many of the cases. presents a feature ablation analysis of our entity-centric classifier on the development portion of the CNN dataset. It shows that n-gram match and frequency of entities are the two most important classes of features.
section: Main Results
More dramatically, our single-model neural network surpasses the previous results by a large margin (over 5%), pushing up the state-of-the-art accuracies to 72.4% and 75.8% respectively. Due to resource constraints, we have not had a chance to investigate ensembles of models, which generally can bring further gains, as demonstrated in () and many other papers.
Concurrently with our paper, and also experiment on these two datasets and report competitive results. However, our single model not only still outperforms theirs, but also appears to be structurally simpler. All these recent efforts converge to similar numbers, and we believe that they are approaching the ceiling performance of this task, as we will indicate in the next section.: Feature ablation analysis of our entitycentric classifier on the development portion of the CNN dataset. The numbers denote the accuracy after we exclude each feature from the full system, so a low number indicates an important feature.
section: Data Analysis
dataset was created in an automatic and heuristic way, how many of the questions are trivial to answer, and how many are noisy and not answerable? (ii) What have these models learned? What are the prospects for further improving them? To study this, we randomly sampled 100 examples from the dev portion of the CNN dataset for analysis (see more details in Appendix A).
section: Breakdown of the Examples
After carefully analyzing these 100 examples, we roughly classify them into the following categories (if an example satisfies more than one category, we classify it into the earliest one):
Exact match The nearest words around the placeholder are also found in the passage surrounding an entity marker; the answer is self-evident.
Sentence-level paraphrasing The question text is entailed/rephrased by exactly one sentence in the passage, so the answer can definitely be identified from that sentence.
Partial clue In many cases, even though we cannot find a complete semantic match between the question text and some sentence, we are still able to infer the answer through partial clues, such as some word/concept overlap.
Multiple sentences It requires processing multiple sentences to infer the correct answer.
Coreference errors It is unavoidable that there are many coreference errors in the dataset. This category includes those examples with critical coreference errors for the answer entity or key entities appearing in the question. Basically we treat this category as "not answerable".
Ambiguous or very hard This category includes examples for which we think humans are notable to obtain the correct answer (confidently). provides our estimate of the percentage for each category, and presents one representative example from each category. To our surprise,
section: Category Question
Passage Exact Match it 's clear @entity0 is leaning toward @placeholder , says an expert who monitors @entity0
. . . @entity116 , who follows @entity0 's operations and propaganda closely , recently told @entity3 , it 's clear @entity0 is leaning toward @entity60 in terms of doctrine , ideology and an emphasis on holding territory after operations . . . .
Paraphrase @placeholder says he understands why @entity0 wo n't play at his tournament . . . @entity0 called me personally to let me know that he would n't be playing here at @entity23 , " @entity3 said on his @entity21 event 's website . . . .
Partial clue a tv movie based on @entity2 's book @placeholder casts a @en-tity76 actor as @entity5
. . . to @entity12 @entity2 professed that his @entity11 is not a religious book . . . .
Multiple sent.
he 's doing a his -and -her duet all by himself , @entity6 said of @placeholder . . . we got some groundbreaking performances , here too , tonight , @entity6 said . we got @entity17 , who will be doing some musical performances . he 's doing a his -and -her duet all by himself . . . .
section: Coref.
Error rapper @placeholder " disgusted , " cancels upcoming show for @en-tity280
. . . with hip -hop star @entity246 saying on @entity247 that he was canceling an upcoming show for the @en-tity249 . . . . (but @entity249 = @entity280 = SAEs)
Hard pilot error and snow were reasons stated for @placeholder plane crash . . . a small aircraft carrying @entity5 , @entity6 and @entity7 the @entity12 @entity3 crashed a few miles from @entity9 , near @entity10 , @entity11 . . . . Ambiguous / hard 17: An estimate of the breakdown of the dataset into classes, based on the analysis of our sampled 100 examples from the CNN dataset.
"coreference errors" and "ambiguous/hard" cases account for 25% of this sample set, based on our manual analysis, and this certainly will be a barrier for training models with an accuracy much above 75% (although, of course, a model can sometimes make a lucky guess). Additionally, only 2 examples require multiple sentences for inference -this is a lower rate than we expected and suggest. Therefore, we hypothesize that inmost of the "answerable" cases, the goal is to  identify the most relevant (single) sentence, and then to infer the answer based upon it.
section: Per-category Performance
Now, we further analyze the predictions of our two systems, based on the above categorization.
As seen in, we have the following observations: (i) The exact-match cases are quite simple and both systems get 100% correct. (ii) For the ambiguous/hard and entity-linking-error cases, meeting our expectations, both of the systems perform poorly. (iii) The two systems mainly differ in paraphrasing cases, and some of the "partial clue" cases. This clearly shows how neural networks are better capable of learning semantic matches involving paraphrasing or lexical variation between the two sentences. (iv) We believe that the neural-net system already achieves near-optimal performance on all the single-sentence and unambiguous cases. There does not seem to be much useful headroom for exploring more sophisticated natural language understanding approaches on this dataset.
section: Related Tasks
We briefly survey other tasks related to reading comprehension.
MCTest () is an opendomain reading comprehension task, in the form of fictional short stories, accompanied by multiplechoice questions. It was carefully created using crowd sourcing, and aims at a 7-year-old reading comprehension level.
On the one hand, this dataset has a high demand on various reasoning capacities: over 50% of the questions require multiple sentences to answer and also the questions come in assorted categories (what, why, how, whose, which, etc). On the other hand, the full dataset has only 660 paragraphs in total (each paragraph is associated with 4 questions), which renders training statistical models (especially complex ones) very difficult.
Up to now, the best solutions ( are still heavily relying on manually curated syntactic/semantic features, with the aid of additional knowledge (e.g., word embeddings, lexical/paragraph databases).
Children Book Test) was developed in a similar spirit to the CNN/Daily Mail datasets. It takes any consecutive 21 sentences from a children's book -the first 20 sentences are used as the passage, and the goal is to infer a missing word in the 21st sentence (question and answer). The questions are also categorized by the type of the missing word: named entity, common noun, preposition or verb. According to the first study on this dataset (), a language model (an n-gram model or a recurrent neural network) with local context is sufficient for predicting verbs or prepositions; however, for named entities or common nouns, it improves performance to scan through the whole paragraph to make predictions. So far, the best published results are reported by window-based memory networks.
bAbI ) is a collection of artificial datasets, consisting of 20 different reasoning types. It encourages the development of models with the ability to chain reasoning, induction/deduction, etc., so that they can answer a question like "The football is in the playground" after reading a sequence of sentences "John is in the playground; Bob is in the office; John picked up the football; Bob went to the kitchen." Various types of memory networks) have been shown effective on these tasks, and show that vector space models based on extensive problem analysis can obtain near-perfect accuracies on all the categories. Despite these promising results, this dataset is limited to a small vocabulary (only 100-200 words) and simple language variations, so there is still a huge gap from real-world datasets that we need to fill in.
section: Conclusion
In this paper, we carefully examined the recent CNN/Daily Mail reading comprehension task. Our systems demonstrated state-of-the-art results, but more importantly, we performed a careful analysis of the dataset by hand.
Overall, we think the CNN/Daily Mail datasets are valuable datasets, which provide a promising avenue for training effective statistical models for reading comprehension tasks. Nevertheless, we argue that: (i) this dataset is still quite noisy due to its method of data creation and coreference errors; (ii) current neural networks have almost reached a performance ceiling on this dataset; and (iii) the required reasoning and inference level of this dataset is still quite simple.
As future work, we need to consider how we can utilize these datasets (and the models trained upon them) to help solve more complex RC reasoning tasks (with less annotated data). and conclusion or recommendations expressed in this material are those of the authors and do not necessarily reflect the view of the DARPA, AFRL, or the US government.
section: Category
section: Sample IDs
Exact match 8, Sentence-level paraphrasing (41) 0, 2, Partial clues Multiple sentences (2) 5, 76
Coreference errors
